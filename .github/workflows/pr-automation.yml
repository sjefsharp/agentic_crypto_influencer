name: PR Automation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest --cov=src/agentic_crypto_influencer --cov-fail-under=80

      - name: Check test coverage
        run: |
          COVERAGE=$(poetry run pytest --cov=src/agentic_crypto_influencer --cov-report=term-missing | grep "TOTAL" | awk '{print $4}' | sed 's/%//')
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage is below 80%: ${COVERAGE}%"
            exit 1
          else
            echo "✅ Coverage is good: ${COVERAGE}%"
          fi

      - name: Comment PR with coverage
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: "test-results.xml"
          reporter: java-junit
          fail-on-error: true

  pr-validation:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v4

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            chore
          requireScope: false

      - name: Check PR size
        uses: codacy/git-version@v2
        with:
          release-branch: main
          dev-branch: develop

      - name: Label PR based on branch
        if: github.event.pull_request.head.ref != github.event.pull_request.base.ref
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" == feature/* ]]; then
            echo "PR from feature branch"
            # Add feature label
          elif [[ "${{ github.event.pull_request.head.ref }}" == hotfix/* ]]; then
            echo "PR from hotfix branch"
            # Add hotfix label
          elif [[ "${{ github.event.pull_request.head.ref }}" == release/* ]]; then
            echo "PR from release branch"
            # Add release label
          fi
